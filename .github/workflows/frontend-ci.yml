name: frontend-github-actions
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
      - develop
env:
  PNPM_VERSION: 8.7.6

jobs:
  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    outputs:
      packages-cache-key: ${{ steps.cache-keys.outputs.packages }}
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3

    - name: Set Timezone
      uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Tokyo"

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Calculate cache keys
      id: cache-keys
      run: |
        echo "packages=${{ runner.os }}-node-${{ matrix.node-version }}-nextjs-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT
        echo "playwright=${{ runner.os }}-node-${{ matrix.node-version }}-playwright-$(pnpm exec playwright --version | awk '{print $2}')" >> $GITHUB_OUTPUT

    - name: Use Node modules cache
      if: ${{ !startsWith(github.head_ref, 'dependabot') }}
      uses: actions/cache@v3
      id: packages-cache
      with:
        path: "**/node_modules"
        key: ${{ steps.cache-keys.outputs.packages }}

    - name: Install dependencies
      if: ${{ steps.packages-cache.outputs.cache-hit != 'true' }}
      run: pnpm i

    - name: Use playwright cache
      if: ${{ !startsWith(github.head_ref, 'dependabot') }}
      uses: actions/cache@v3
      id: playwright-cache
      with:
        path: /home/runner/.cache/ms-playwright
        key: ${{ steps.cache-keys.outputs.playwright }}

    - name: Install Browser
      if: ${{ steps.playwright-cache.outputs.cache-hit != 'true' }}
      run: pnpm exec playwright install --with-deps chromium

  run-unit-test:
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3

    - name: Set Timezone
      uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Tokyo"

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Use Node modules cache
      uses: actions/cache/restore@v3
      id: packages-cache
      with:
        path: "**/node_modules"
        key: ${{ needs.setup.outputs.packages-cache-key }}

    - name: Install dependencies
      if: ${{ steps.packages-cache.outputs.cache-hit != 'true' }}
      run: pnpm i

    - name: Run test
      run: pnpm test

  run-component-test:
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Set Timezone
      uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Tokyo"

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Use Node modules cache
      uses: actions/cache/restore@v3
      id: packages-cache
      with:
        path: "**/node_modules"
        key: ${{ needs.setup.outputs.packages-cache-key }}

    - name: Install dependencies
      if: ${{ steps.packages-cache.outputs.cache-hit != 'true' }}
      run: pnpm i

    - name: Use playwright cache
      uses: actions/cache/restore@v3
      id: playwright-cache
      with:
        path: /home/runner/.cache
        key: ${{ needs.setup.outputs.playwright-cache-key }}

    - name: Install Browser
      if: ${{ steps.playwright-cache.outputs.cache-hit != 'true' }}
      run: pnpm exec playwright install --with-deps chromium

    - name: Run Storybook test
      run: pnpm test-storybook:ci

  build-nextjs-app:
    needs: setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: app
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Use Node modules cache
      uses: actions/cache/restore@v3
      with:
        path: "**/node_modules"
        key: ${{ needs.setup.outputs.packages-cache-key }}

    - name: Install dependencies
      if: ${{ steps.packages-cache.outputs.cache-hit != 'true' }}
      run: pnpm i

    - uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}
    - name: Build Next.js app
      run: pnpm build
